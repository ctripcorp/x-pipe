<?xml version="1.0" encoding="UTF-8"?>
<model model-package="com.ctrip.xpipe.redis.core"
	enable-sax-parser="true" class-suffix="Meta" parent="true">
	<entity name="xpipe" implements="java.io.Serializable">
		<entity-ref name="dc" type="map" />
		<entity-ref name="redisCheckRule" type="map"/>
	</entity>
	<entity name="redisCheckRule" implements="java.io.Serializable">
		<attribute name="id" key="true" value-type="Long" />
		<attribute name="checkType" value-type="String"/>
		<attribute name="param" value-type="String"/>
	</entity>
	<entity name="metaServer" implements="java.io.Serializable">
	</entity>
	<entity name="zkServer" implements="java.io.Serializable">
	</entity>
	<entity name="dc" implements="java.io.Serializable">
		<attribute name="id" key="true" />
		<entity-ref name="cluster" type="map" />
		<entity-ref name="sentinel" type="map" />
	</entity>
	<entity name="cluster" implements="java.io.Serializable, com.ctrip.xpipe.redis.core.entity.Cluster">
		<attribute name="id" key="true" />
		<entity-ref name="shard" type="map" />
		<snippet>
			&#64;com.fasterxml.jackson.annotation.JsonIgnore
			public Map&lt;String, ShardMeta&gt; getAllShards() {
				Map &lt;String, ShardMeta&gt; map = new LinkedHashMap&lt;&gt;();
				map.putAll(m_shards);
				for (SourceMeta sourceMeta : m_sources) {
					map.putAll(sourceMeta.getShards());
				}
				return map;
			}
		</snippet>
		<snippet>
			&#64;com.fasterxml.jackson.annotation.JsonIgnore
			public ShardMeta findFromAllShards(String id) {
				ShardMeta result = findShard(id);
				if (result != null) {
					return result;
				}
				for (SourceMeta sourceMeta : m_sources) {
					result = sourceMeta.findShard(id);
					if (result != null) {
						return result;
					}
				}
				return null;
            }
		</snippet>
		<snippet>
			&#64;com.fasterxml.jackson.annotation.JsonIgnore
			public String getSourceDc() {
				String sourceDc = m_activeDc;
				if (!m_sources.isEmpty()) {
					sourceDc = m_sources.get(0).getSrcDc();
				}
				return sourceDc;
			}
		</snippet>
	</entity>
	<entity name="source" implements="java.io.Serializable, com.ctrip.xpipe.redis.core.entity.Source">
		<entity-ref name="shard" type="map" />
	</entity>
	<entity name="shard" implements="java.io.Serializable, com.ctrip.xpipe.redis.core.entity.Shard">
		<attribute name="id" key="true" />
		<attribute name="sentinelId" value-type="Long"/>
	</entity>	
	<entity name="sentinel" implements="java.io.Serializable">
		<attribute name="id" key="true" value-type="Long" />
	</entity>
	<entity name="keeperContainer" implements="java.io.Serializable">
		<attribute name="id" value-type="Long" />
	</entity>
	<entity name="applierContainer" implements="java.io.Serializable">
		<attribute name="id" value-type="Long" />
	</entity>
	<entity name="applier" implements="java.io.Serializable, com.ctrip.xpipe.redis.core.entity.Applier">
		<attribute name="active" primitive="true" />
		<attribute name="applierContainerId" value-type="Long" />
	</entity>
	<entity name="keeper" implements="java.io.Serializable, com.ctrip.xpipe.redis.core.entity.Keeper">
		<attribute name="active" primitive="true" />
		<attribute name="keeperContainerId" value-type="Long" />
		<attribute name="offset" value-type="Long" />
		<snippet>
			public boolean isMaster(){
			return m_master == null || m_master.trim().length() == 0;
			}
		</snippet>
	</entity>
	<entity name="redis" implements="java.io.Serializable, com.ctrip.xpipe.redis.core.entity.Redis">
		<attribute name="offset" value-type="Long" />
		<attribute name="gid" value-type="Long" />
		<snippet>
			public boolean isMaster(){
			return m_master == null || m_master.trim().length() == 0;
			}
		</snippet>
	</entity>
	<entity name="route" implements="java.io.Serializable, com.ctrip.xpipe.redis.core.entity.Route">
		<attribute name="id" key="true" />
	</entity>
	<entity name="az" implements="java.io.Serializable">
		<attribute name="id" key="true" />
	</entity>
</model>

