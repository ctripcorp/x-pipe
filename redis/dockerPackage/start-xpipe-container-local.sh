#!/bin/bash

#functions
function copyJar(){
    comp=$1
    if [ -f xpipe-$comp/redis-$comp.jar ];then
      rm xpipe-$comp/redis-$comp.jar
    fi

    if [ ! -f ../package/redis-$comp*-package/target/redis-$comp*.jar ];then
      cd ../../
      mvn clean install -Plocal,package -DskipTests
      cd redis/dockerPackage

    fi

    cp ../package/redis-$comp*-package/target/redis-$comp*.jar  xpipe-$comp/redis-$comp.jar
}
#vars
COMPOSE_FILE=docker-compose.yml

copyJar console
copyJar keeper
copyJar meta
copyJar proxy


#MYSQL
if [ -d mysql ];then
    rm -fr mysql
fi

mkdir mysql
mkdir mysql/data
mkdir mysql/init
mkdir mysql/sql

echo "FROM mysql:5.7
ADD ./init/docker_init.sql /docker-entrypoint-initdb.d/docker_init.sql
ADD ./sql/init_data.sql /opt/sql/init_data.sql
ADD ./sql/xpipedemodbtables.sql /opt/sql/xpipedemodbtables.sql" >> mysql/Dockerfile
cp xpipe-console/sql/init_data.sql mysql/sql/
cp xpipe-console/sql/xpipedemodbtables.sql mysql/sql/
cp xpipe-console/sql/docker_init.sql mysql/init/

#redis
if [ -d redis ];then
    rm -fr redis
fi

mkdir redis
ports=(6379 6479 6579 6679 7379 7479 7579 7679)
for port in ${ports[*]}
do
    #echo $port
    mkdir -p redis/$port/data
    touch redis/$port/redis.conf
    chmod 777 redis/$port/redis.conf

    tee redis/$port/redis.conf << EOF
    loglevel debug
    appendonly no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 1mb
    client-output-buffer-limit normal 0 0 0
    repl-backlog-size 100mb
    rdbcompression no
    # Generated by CONFIG REWRITE
    notify-keyspace-events "$E"
    min-slaves-to-write 0
    protected-mode no
    dir "/data"
EOF
    if [ $port == 7479 ];then
        echo "slaveof 172.19.0.14 6379" >> redis/$port/redis.conf
    fi
    if [ $port == 6479 ];then
        echo "slaveof 172.19.0.10 6379" >> redis/$port/redis.conf
    fi
done


if [ "$1" == "console-checker" ];then
  echo "console-checker mode"
  COMPOSE_FILE=docker-compose-console-checker.yml
elif [ "$1" == "console-proxy" ]; then
  echo "console-proxy mode"
  rm mysql/sql/init_data.sql
  cp xpipe-console/sql/init_data_proxy.sql mysql/sql/init_data.sql
  COMPOSE_FILE=docker-compose-console-proxy.yml
fi

docker-compose -f $COMPOSE_FILE up  -d --build --no-recreate